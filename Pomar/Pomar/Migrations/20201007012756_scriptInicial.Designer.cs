// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pomar.Data;

namespace Pomar.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201007012756_scriptInicial")]
    partial class scriptInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("bdPomar")
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:IdentityIncrement", 1)
                .HasAnnotation("SqlServer:IdentitySeed", 1)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pomar.Models.Arvore", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Codigo")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataPlantio")
                        .HasColumnName("DataPlantio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EspecieId")
                        .HasColumnType("int");

                    b.Property<int>("GrupoArvoreId")
                        .HasColumnType("int");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.HasKey("Codigo")
                        .HasName("Pk_Arvore");

                    b.HasIndex("EspecieId");

                    b.HasIndex("GrupoArvoreId");

                    b.ToTable("tb_arvore");
                });

            modelBuilder.Entity("Pomar.Models.Colheita", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Codigo")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataColheita")
                        .HasColumnType("datetime2");

                    b.Property<string>("Informacoes")
                        .IsRequired()
                        .HasColumnName("Informacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PesoBruto")
                        .HasColumnName("PesoBruto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Codigo")
                        .HasName("Pk_Colheita");

                    b.ToTable("tb_colheita");
                });

            modelBuilder.Entity("Pomar.Models.ColheitaArvore", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Codigo")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArvoreId")
                        .HasColumnType("int");

                    b.Property<int>("ColheitaId")
                        .HasColumnType("int");

                    b.HasKey("Codigo")
                        .HasName("Pk_ColheitaArvore");

                    b.HasIndex("ArvoreId");

                    b.HasIndex("ColheitaId");

                    b.ToTable("tb_colheitaarvore");
                });

            modelBuilder.Entity("Pomar.Models.Especie", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Codigo")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo")
                        .HasName("Pk_Especie");

                    b.ToTable("tb_especie");
                });

            modelBuilder.Entity("Pomar.Models.GrupoArvore", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Codigo")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo")
                        .HasName("Pk_Grupoarvore");

                    b.ToTable("tb_grupoarvore");
                });

            modelBuilder.Entity("Pomar.Models.Arvore", b =>
                {
                    b.HasOne("Pomar.Models.Especie", "Especie")
                        .WithMany("Arvores")
                        .HasForeignKey("EspecieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pomar.Models.GrupoArvore", "GrupoArvore")
                        .WithMany("Arvores")
                        .HasForeignKey("GrupoArvoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pomar.Models.ColheitaArvore", b =>
                {
                    b.HasOne("Pomar.Models.Arvore", "Arvore")
                        .WithMany("ColheitasArvore")
                        .HasForeignKey("ArvoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pomar.Models.Colheita", "Colheita")
                        .WithMany("ColheitaArvores")
                        .HasForeignKey("ColheitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
